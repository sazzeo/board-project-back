<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.board.posts.dao.PostsRepository">

    <select id="selectPost" resultMap="postsAndTags" resultType="postsDto">
        SELECT *
        FROM (SELECT POSTS.*
              FROM POSTS
              WHERE POSTS_SEQ = #{postsSeq}) POSTS
                 LEFT JOIN TAGS
                           USING (POSTS_SEQ);
    </select>

    <insert id="insertPost" parameterType="postsDto">
        INSERT INTO POSTS(TITLE, CONTENT , MEMBER)
        VALUES(#{title} , #{content} , #{member})
        <selectKey keyProperty="postsSeq" resultType="long" order="AFTER">
            select currval('POSTS_SEQ')
        </selectKey>
    </insert>

    <insert id="insertTag" parameterType="tagsDto">
        INSERT INTO TAGS(POSTS_SEQ, TAG_NAME)
        VALUES (#{postsSeq}, #{tagName})
    </insert>

    <update id="updatePost" parameterType="postsDto">
        UPDATE POSTS
        SET TITLE   = #{title}
          , CONTENT = #{content}
        WHERE POSTS_SEQ = #{postsSeq}
    </update>

    <update id="updatePostsViews" parameterType="long">
        UPDATE POSTS
        SET VIEWS = VIEWS + 1
        WHERE POSTS_SEQ = #{postsSeq}
    </update>

    <select id="selectTagsBySeq" parameterType="long" resultType="tagsDto">
        SELECT TAG_NAME
        FROM TAGS
        where POSTS_SEQ = #{postsSeq}
        order by TAG_SEQ;
    </select>

    <select id="selectTagsBySeqList" parameterType="list" resultType="tagsDto">
        SELECT POSTS_SEQ ,TAG_NAME
        FROM TAGS
        where POSTS_SEQ in
        <foreach collection="seqList" item="seq" index="index" separator="," open="(" close=")">
            #{seq}
        </foreach>
        order by TAG_SEQ;
    </select>

    <resultMap type="map" id="postsAndTags">
        <id property="postsSeq" column="POSTS_SEQ"/>
        <result property="title" column="TITLE"/>
        <result property="content" column="CONTENT"/>
        <result property="member" column="MEMBER"/>
        <result property="regDate" column="REG_DATE"/>
        <result property="views" column="VIEWS"/>
        <collection property="tagList" ofType="map" javaType="map">
            <id property="tagSeq" column="TAG_SEQ"/>
            <result property="tagName" column="TAG_NAME"/>
        </collection>
    </resultMap>


    <sql id="postsColumn">
        POSTS.POSTS_SEQ,
        POSTS.TITLE ,
        SUBSTR(POSTS.CONTENT , 1, 80) AS CONTENT,
        POSTS.MEMBER ,
        POSTS.REG_DATE ,
        POSTS.VIEWS
    </sql>

    <select id="selectPosts" resultMap="postsAndTags" resultType="map">
        <include refid="Pagination.pagingHeader"/>
        <include refid="postsColumn"/> ,
        TAGS.TAG_NAME
        FROM POSTS
        LEFT JOIN TAGS
        USING (POSTS_SEQ)) POSTS
        <include refid="Pagination.pagingFooter"/>
    </select>

    <select id="selectTagsOrderByTop" resultType="tagsDto">
        SELECT TAG_NAME, COUNT(TAG_NAME) COUNT
        FROM TAGS
        GROUP BY TAG_NAME
        HAVING COUNT (*) >= #{size}
        ORDER BY COUNT DESC, TAG_NAME
    </select>

    <select id="selectPostsByTagName" resultMap="postsAndTags" resultType="postsDto">
        <include refid="Pagination.pagingHeader"/>
        POSTS.* ,
        TAGS.TAG_NAME
        FROM POSTS
        LEFT JOIN TAGS
        USING (POSTS_SEQ)
        <if test="tagName != null">
            WHERE POSTS_SEQ
            IN (SELECT
            POSTS_SEQ
            FROM TAGS
            WHERE TAG_NAME = #{tagName})
        </if>
        ) POSTS
        --임시
        WHERE ROWNUM BETWEEN #{pageable.start} AND #{pageable.end}
    </select>

    <!--    게시글 삭제-->
    <delete id="deletePostsBySeq">
        DELETE
        FROM POSTS
        WHERE POSTS_SEQ = #{postsSeq}
    </delete>

    <!--    게시글 삭제시 태그도 삭제-->
    <delete id="deleteTagsByPostsSeq">
        DELETE
        FROM TAGS
        WHERE POSTS_SEQ = #{postsSeq}
    </delete>

    <!--    태그 단건 삭제-->
    <delete id="deleteTagsBySeq">
        DELETE
        FROM TAGS
        WHERE TAG_SEQ = #{tagSeq}
    </delete>

</mapper>