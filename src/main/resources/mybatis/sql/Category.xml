<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.board.blog.dao.CategoryRepository">


    <insert id="insertCategory" parameterType="categoryDto">
        INSERT INTO CATEGORY(BLOG_SEQ, TITLE, SORT, UP_CATEGORY , PUBLIC_YN)
        VALUES (#{blogSeq}, #{title}, #{sort}, #{upCategory} , ${publicYn})
        <selectKey keyProperty="categorySeq" resultType="long" order="AFTER">
            SELECT CURRVAL('CATEGORY_SEQ')
        </selectKey>
    </insert>


    <resultMap type="categoryDto" id="categoryMap">
        <id property="categorySeq" column="PARENT_CATEGORY_SEQ"/>
        <result property="blogSeq" column="PARENT_BLOG_SEQ"/>
        <result property="title" column="PARENT_TITLE"/>
        <result property="sort" column="PARENT_SORT"/>
        <result property="totalCnt" column="PARENT_TOTAL_CNT"/>
        <result property="upCategory" column="PARENT_UP_CATEGORY"/>
        <result property="publicYn" column="PARENT_PUBLIC_YN"/>
        <collection property="children" javaType="list" ofType="categoryDto">
            <id property="categorySeq" column="CHILDREN_CATEGORY_SEQ"/>
            <result property="blogSeq" column="CHILDREN_BLOG_SEQ"/>
            <result property="title" column="CHILDREN_TITLE"/>
            <result property="sort" column="CHILDREN_SORT"/>
            <result property="totalCnt" column="CHILDREN_TOTAL_CNT"/>
            <result property="upCategory" column="CHILDREN_UP_CATEGORY"/>
            <result property="publicYn" column="CHILDREN_PUBLIC_YN"/>
        </collection>
    </resultMap>

    <select id="selectCategories" resultMap="categoryMap">
        WITH CATEGORY AS (SELECT CATEGORY_SEQ,
                                 BLOG_SEQ,
                                 TITLE,
                                 SORT,
                                 UP_CATEGORY,
                                 PUBLIC_YN ,
                                 coalesce((SELECT COUNT(POSTS_SEQ) FROM POSTS WHERE POSTS.CATEGORY_SEQ= CATEGORY.CATEGORY_SEQ),0) TOTAL_CNT
                          FROM CATEGORY
                          WHERE BLOG_SEQ = (SELECT BLOG_SEQ FROM BLOG WHERE ID = #{id}))
        SELECT PARENT.CATEGORY_SEQ   PARENT_CATEGORY_SEQ,
               PARENT.BLOG_SEQ       PARENT_BLOG_SEQ,
               PARENT.TITLE          PARENT_TITLE,
               PARENT.SORT           PARENT_SORT,
               PARENT.UP_CATEGORY    PARENT_UP_CATEGORY,
               (PARENT.TOTAL_CNT  + coalesce(SUM(CHILDREN.TOTAL_CNT) OVER(PARTITION BY  PARENT.CATEGORY_SEQ), 0)) PARENT_TOTAL_CNT,
               PARENT.PUBLIC_YN      PARENT_PUBLIC_YN,
               CHILDREN.CATEGORY_SEQ CHILDREN_CATEGORY_SEQ,
               CHILDREN.BLOG_SEQ     CHILDREN_BLOG_SEQ,
               CHILDREN.TITLE        CHILDREN_TITLE,
               CHILDREN.SORT         CHILDREN_SORT,
               CHILDREN.UP_CATEGORY  CHILDREN_UP_CATEGORY,
               CHILDREN.TOTAL_CNT    CHILDREN_TOTAL_CNT,
               CHILDREN.PUBLIC_YN    CHILDREN_PUBLIC_YN
        FROM CATEGORY PARENT
                 LEFT JOIN CATEGORY CHILDREN
                           ON (PARENT.CATEGORY_SEQ = CHILDREN.UP_CATEGORY)
        WHERE PARENT.UP_CATEGORY IS NULL
        ORDER BY PARENT.SORT, CHILDREN.SORT
    </select>

    <select id="selectCategoriesForUpdate" resultType="categoryDto">
        SELECT CATEGORY_SEQ ,
                BLOG_SEQ,
               TITLE,
               SORT ,
               UP_CATEGORY ,
               PUBLIC_YN
        FROM CATEGORY
        WHERE  BLOG_SEQ = (SELECT BLOG_SEQ FROM BLOG WHERE ID = #{id})
        ORDER BY CATEGORY_SEQ
    </select>

    <select id="selectCategoriesForInsertPosts" resultType="categoryDto">
        SELECT RANK() OVER(PARTITION BY UP_CATEGORY ORDER BY SORT) ,
                CATEGORY.*
        FROM (
                 SELECT CATEGORY_SEQ,
                        TITLE,
                        CASE
                            WHEN UP_CATEGORY IS NULL THEN 0
                            ELSE SORT END                            SORT,
                        COALESCE(UP_CATEGORY, CATEGORY.CATEGORY_SEQ) UP_CATEGORY
                 FROM CATEGORY
                 WHERE BLOG_SEQ = (select blog_seq from blog where id = #{id})) CATEGORY
    </select>

    <update id="updateCategory" parameterType="categoryDto">
        UPDATE CATEGORY
        SET TITLE = #{title} ,
        PUBLIC_YN = #{publicYn} ,
        UP_CATEGORY = #{upCategory} ,
        SORT = #{sort}
        WHERE CATEGORY_SEQ = #{categorySeq}
    </update>

    <update id="updateCategoryTotalCnt" parameterType="long">
        UPDATE CATEGORY SET TOTAL_CNT = TOTAL_CNT +1
        WHERE CATEGORY_SEQ = #{categorySeq}
    </update>

    <delete id="deleteCategory" >
        DELETE FROM CATEGORY
        WHERE CATEGORY_SEQ in
        <foreach collection="list" item="categorySeq" index="index" separator="," open="(" close=")">
            #{categorySeq}
        </foreach>
    </delete>


</mapper>